name: Hydrate & Deploy Docs

on:
  workflow_dispatch:
    inputs:
      delete_after_hours:
        description: 'Hours until cleanup (0 for indefinite). Overrides config.yml.'
        required: false

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install yq
        run: sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Configure pip caching
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Configure Site and README
        run: |
          # --- Set Hydration Duration ---
          if [ -n "${{ github.event.inputs.delete_after_hours }}" ]; then
            HOURS=${{ github.event.inputs.delete_after_hours }}
          else
            HOURS=$(yq '.hydration_settings.default_hours' config.yml)
          fi

          if [ "$HOURS" -eq 0 ]; then
            END_TIME="2099-12-31T23:59:59Z"
            README_EXPIRY="**Indefinite**"
          else
            END_TIME=$(date -u -d "+$HOURS hours" -I'seconds')
            # Read timezone from config and format the expiration time for the README
            TZ=$(yq '.hydration_settings.timezone' config.yml)
            EXPIRY_DISPLAY=$(TZ="$TZ" date -d "@$(date -d "$END_TIME" +%s)" +"%b %d, %Y @ %I:%M %p %Z")
            README_EXPIRY="**$EXPIRY_DISPLAY**"
          fi

          # --- Apply Variables to mkdocs.yml ---
          sed -i "s|SITE_URL_PLACEHOLDER|https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}|" mkdocs.yml
          sed -i "s|REPO_FULL_NAME_PLACEHOLDER|${{ github.repository }}|" mkdocs.yml
          sed -i "s|REPO_OWNER_PLACEHOLDER|${{ github.repository_owner }}|" mkdocs.yml
          sed -i "s|COUNTDOWN_END_PLACEHOLDER|$END_TIME|" mkdocs.yml

          # --- Update README ---
          START_DISPLAY=$(date -u +"%b %d, %Y @ %H:%M UTC")
          sed -i "s|üïí Hydrated on: .*|üïí Hydrated on: **$START_DISPLAY**|" README.md
          sed -i "s|‚è≥ Expires in: .*|‚è≥ Expires on: $README_EXPIRY|" README.md

      - name: Build Hydrated Docs
        run: python -m mkdocs build -f mkdocs.yml

      - name: Push README changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git commit -am "Docs: Update hydration timestamp"
            git push
          fi

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
